// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  List          List[]
  Gear          Gear[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model List {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String @default("")
  description String @default("")

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  categories ListCategory[]

  @@map("lists")
}

model Gear {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name        String @default("")
  description String @default("")

  image_url String @default("")
  weight_g  Int    @default(0)
  price     Int    @default(0)

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  categories CategoryGear[]

  @@map("gear")
}

model ListCategory {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String @default("")

  list   List   @relation(fields: [listId], references: [id], onDelete: Cascade)
  listId String

  gear CategoryGear[]

  @@map("list_categories")
}

model CategoryGear {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  category   ListCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId String

  gear   Gear   @relation(fields: [gearId], references: [id], onDelete: Cascade)
  gearId String

  quantity          Int
  worn_weight       Boolean
  consumable_weight Boolean

  @@id([categoryId, gearId])
  @@map("category_gear")
}
